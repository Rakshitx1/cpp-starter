#!/bin/bash

# Get the directory where this script is located
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# Save the current directory
CURRENT_DIR=$(pwd)

# Navigate to the script directory
cd "$SCRIPT_DIR"

# Initialize variables
BUILD_TYPE="Debug"
TIMED_RUN=false
DELETE_BUILD=false
OTHER_ARGS=()

# Parse arguments
for arg in "$@"; do
    case "${arg,,}" in
        ("release"|"r")
            BUILD_TYPE="Release"
            ;;
        ("debug"|"d")
            BUILD_TYPE="Debug"
            ;;
        ("t"|"time")
            TIMED_RUN=true
            ;;
        ("b"|"delete")
            DELETE_BUILD=true
            ;;
        (*)
            OTHER_ARGS+=("$arg")
            ;;
    esac
done

echo -e "\033[34mBuilding in $BUILD_TYPE mode...\033[0m"

# Remove existing build directory if it exists
if [ -d "build" ]; then
    rm -rf build
fi

# Create a new build directory
mkdir -p build

# Generate Makefiles and build the project with the specified build type
cmake -DCMAKE_BUILD_TYPE="$BUILD_TYPE" -S . -B build/

# Check if the configuration file exists
CONFIG_FILE="build/project_config.sh"
if [ ! -f "$CONFIG_FILE" ]; then
    echo -e "\033[34mConfiguration file not found: $CONFIG_FILE\033[0m"
    exit 1
fi

# Build the project
cmake --build build/

# Source the project configuration generated by CMake
source "$CONFIG_FILE"

# Determine the executable path
if [ "$BUILD_TYPE" == "Release" ]; then
    EXECUTABLE="./build/Release/$PROJECT_NAME"
else
    EXECUTABLE="./build/Debug/$PROJECT_NAME"
fi

# Check if the executable exists
if [ ! -f "$EXECUTABLE" ]; then
    echo -e "\033[34mExecutable not found: $EXECUTABLE\033[0m"
    exit 1
fi

# Run the executable with the remaining arguments
if [ "$TIMED_RUN" = true ]; then
    time "$EXECUTABLE" "${OTHER_ARGS[@]}"
else
    "$EXECUTABLE" "${OTHER_ARGS[@]}"
fi

# Check if the build directory should be deleted
if [ "$DELETE_BUILD" = true ]; then
    cd "$SCRIPT_DIR"
    rm -rf build
    echo -e "\033[34mBuild directory deleted.\033[0m"
fi

# Return to the initial directory
cd "$CURRENT_DIR"
